{"version":3,"file":"front-page-element.js","sourceRoot":"","sources":["../src/pages/front-page-element.ts"],"names":[],"mappings":";;;;;;AAAA,OAAO,EAAC,UAAU,EAAE,IAAI,EAAE,GAAG,EAAC,MAAM,KAAK,CAAC;AAC1C,OAAO,EAAC,aAAa,EAAC,MAAM,mBAAmB,CAAC;AAChD,OAAO,EAAE,IAAI,EAAE,MAAM,WAAW,CAAC;AACjC,OAAO,sDAAsD,CAAC;AAC9D,OAAO,sDAAsD,CAAC;AAC9D,OAAO,0DAA0D,CAAC;AAClE,OAAO,yCAAyC,CAAC;AACjD,OAAO,4BAA4B,CAAC;AAEpC,OAAO,EAAE,SAAS,EAAE,MAAM,mBAAmB,CAAC;AAC9C,OAAO,+BAA+B,CAAC;AACvC,OAAO,8BAA8B,CAAC;AACtC,OAAO,8BAA8B,CAAC;AAG/B,IAAM,gBAAgB,GAAtB,MAAM,gBAAiB,SAAQ,UAAU;IAC9C;QACE,KAAK,EAAE,CAAC;QAIV,UAAK,GAAW,EAAE,CAAC;QACnB,aAAQ,GAAW,EAAE,CAAC;QAwDrB,eAAU,GAAG,IAAI,IAAI,CAAW,IAAI,EAAE;YACrC,IAAI,EAAE,SAAS;YACf,IAAI,EAAE,GAAG,EAAE,CAAC,EAAE;YACd,OAAO,EAAE,KAAK;SACf,CAAC,CAAC;QAEH,cAAS,GAAG,CAAC,KAAa,EAAE,EAAE;YAC5B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;YACnB,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,EAAC,KAAK,EAAE,KAAK,EAAC,CAAC,CAAC;QACtC,CAAC,CAAC;QACF,mBAAc,GAAG,CAAC,QAAgB,EAAE,EAAE;YACpC,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;YACzB,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,QAAQ,EAAE,CAAC,CAAC;QACvD,CAAC,CAAC;QAzEA,wBAAwB;IAC1B,CAAC;IA0EQ,MAAM;QACd,OAAO,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC;YAC5B,OAAO,EAAE,GAAG,EAAE,CAAC,IAAI,CAAA,qBAAqB;YACzC,OAAO,EAAE,GAAG,EAAE,CAAC,IAAI,CAAA,oBAAoB;YACtC,QAAQ,EAAE,CAAC,IAET,EAAE,EAAE;gBACP,CAAC;gBACD,OAAO,IAAI,CAAA;;;;iBAIE,IAAI,CAAC,KAAK;qBACN,IAAI,CAAC,SAAS;;;;mBAIhB,IAAI,CAAC,QAAQ;yBACP,IAAI,CAAC,cAAc;;;;;aAK/B,IAAI,CAAC,KAAK;kBACL,IAAI,CAAC,SAAS;aACnB,IAAI,CAAC,KAAK;iBACN,IAAI,CAAC,QAAQ;;;;KAIzB,CAAC;YACA,CAAC;YACD,KAAK,EAAE,CAAC,KAAa,EAAE,EAAE,CACzB,IAAI,CAAA,gCAAgC,KAAK,QAAQ;SACrD,CAAC,CAAC;IACA,CAAC;;AAxGa,uBAAM,GAAG,GAAG,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAmD3B,AAnDqB,CAmDpB;AA5DS,gBAAgB;IAD5B,aAAa,CAAC,oBAAoB,CAAC;GACvB,gBAAgB,CAkH5B","sourcesContent":["import {LitElement, html, css} from 'lit';\nimport {customElement} from 'lit/decorators.js';\nimport { Task } from '@lit/task';\nimport '@carbon/web-components/es/components/search/index.js';\nimport '@carbon/web-components/es/components/button/index.js';\nimport '@carbon/web-components/es/components/text-input/index.js';\nimport '@material/web/button/elevated-button.js';\nimport '@material/web/icon/icon.js';\n\nimport { getSearch } from '../api/YoutubeAPI';\nimport '../components/results-element';\nimport '../components/search-element';\nimport '../components/filter-element';\n\n@customElement('front-page-element')\nexport class FrontPageElement extends LitElement {\n  constructor() {\n    super();\n    //this.searchTask.run();\n  }\n\n  value: string = '';\n  filterBy: string = '';\n\n  static override styles = css`\n    :host {\n      display: flex;\n      flex: 1;\n      justify-content: center;\n      --md-sys-color-primary: #fff;\n      --md-sys-color-surface-container-low: #0090f8;\n      --md-elevated-button-container-shape: 5px\n\n    }\n    .search {\n      position: sticky;\n      top: 0;\n      height: 150px;\n      width: 100vw;\n      z-index: 1000;\n      align-items: center;\n      justify-content: center;\n      display: flex;\n      flex-wrap: wrap;\n      background-color: #fff;\n    }\n    .searchTextField {\n      width: 300px;\n      height: 7ch;\n      borderRight: 0;\n      border-top-right-radius: 0;\n      border-bottom-right-radius\" 0;\n    }\n    .searchButton {\n     border: 1px solid lightgray;\n     backgroundColor: red;\n    }\n    .container {\n      display: flex;\n      height: calc(100vh - 200px);\n      flex: 1;\n      justify-content: center;\n      flex-flow: wrap;\n      overflow-y: scroll;\n      overflow-x: hidden;\n      scrollbar-color: lightgray;\n    }\n    .filters {\n      margin-right: 100px;\n      border-radius: 25px;\n      background-color: #0090f8\n    }\n    .individualFilters: {\n      margin: 0\n    }\n  `;\n     \n\n   searchTask = new Task<any, any>(this, {\n    task: getSearch,\n    args: () => [],\n    autoRun: false,\n  });\n  \n  runSearch = (value: string) => {\n    this.value = value;\n    this.searchTask.run({query: value});\n  };\n  handleFilterBy = (filterBy: string) => {\n    this.filterBy = filterBy;\n    this.searchTask.run({ query: this.value, filterBy });\n  };\n\n  override render() {\n   return this.searchTask.render({\n     initial: () => html`<div> initial</div>`,\n    pending: () => html`<div>pending</div>`,\n     complete: (data: {\n       items: any[];\n      }) => {\n    ;\n    return html`\n      <div class=\"container\">\n      <div class=\"search\">\n      <search-element\n       .value=\"${this.value}\"\n       .runSearch=\"${this.runSearch}\"\n      ></search-element>\n      <div class=\"filters\">\n      <filter-element\n      .filterBy=\"${this.filterBy}\"\n      .handleFilterBy=\"${this.handleFilterBy}\"\n      ></filter-element>\n  </div>\n  </div>\n  <results-element\n    .data=\"${data.items}\"\n    .runSearch=\"${this.runSearch}\"\n    .value=${this.value}\n    .filterBy=\"${this.filterBy}\"\n  ></results-element>\n</div>\n      </div>\n    `;\n      },\n      error: (error: string) =>\n      html`<div>...something went wrong ${error}</div>`,\n });\n    }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'front-page-element': FrontPageElement;\n  }\n}\n"]}